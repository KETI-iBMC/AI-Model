#include <ipmi/sensor_define.hpp>

const float m_val_vol[] = {
    63.15, 17.19, 7.06, 7.06, 63.15, 9.41, 20.22, 9.40,
    9.40,  7.06,  7.06, 7.06, 7.06,  7.06, 7.06}; // 15.65==12(V)*1000*1.8(V)/(1.348*1024)
const float input_volt[] = {1.348, 1.355, 1.0, 1.05, 1.348, 1.35, 0.998, 1.276,
                            1.276, 1.2,   1.2, 1.2,  1.2,   1.0,  1.0};
const float nomi[] = {1.843, 1.69, 0.929, 1.347, 1.724, 1.69,  1.69, 1.69,
                      1.69,  1.2,  1.2,   1.2,   1.2,   0.929, 0.929};
const float volt[] = {12.0, 3.3, 1.0, 1.05, 12.0, 1.8, 3.0, 1.7,
                      1.7,  1.2, 1.2, 1.2,  1.2,  1.0, 1.0};

sensor_thresh_t peb_sensors[PEB_SENSOR_COUNT] = {
       {BMC_SLAVE_ADDR,
     0x00,
     PEB_SENSOR_NUM_BASE,
     0x07,
     0x0d,
     0x7F,
     0x68,
     SENSOR_TYPE_VOLTAGE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_VOLTS,
     0x00,
     0x00,
     (unsigned char)63.15,
     M_TOLERANCE,
     0x00,
     0x0,
     0x1,
     0xD0,
     0x0,
     ((unsigned char)(1000 * 12.0) / 63.15),
     0xC5,
     0x8B,
     0xFF,
     0x00,
     P12V_VOUT_UNR_THRESHOLD,
     P12V_VOUT_UCR_THRESHOLD,
     P12V_VOUT_UNC_THRESHOLD,
     P12V_VOUT_LNR_THRESHOLD,
     P12V_VOUT_LCR_THRESHOLD,
     P12V_VOUT_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_PEB,
     0xC8,
     "P12V_PSU1"},
         // {BMC_SLAVE_ADDR, 0x00, NVA_SENSOR_PSU1_WATT, 0xA, 0x0, 0x7F, 0x64,
    // SENSOR_TYPE_POWER_UNIT, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_WATTS, 0x00, 0x00, 10, 0x01, 0x00, 0x02, 0x30, 0x01,
    // 0x1,
    // 0x4, 0xFF, 0x0, 0xFF, 0x0,
    // PSU_WATT_UNR_THRESHOLD, PSU_WATT_UCR_THRESHOLD, PSU_WATT_UNC_THRESHOLD,
    // PSU_WATT_LNR_THRESHOLD, PSU_WATT_LCR_THRESHOLD, PSU_WATT_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_NVA, 0xCE, "PSU1_OUT_POWER"},
         {BMC_SLAVE_ADDR,
     0x00,
     PEB_SENSOR_NUM_BASE + 1,
     0x07,
     0x0d,
     0x7F,
     0x68,
     SENSOR_TYPE_VOLTAGE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_VOLTS,
     0x00,
     0x00,
     (unsigned char)63.15,
     M_TOLERANCE,
     0x00,
     0x0,
     0x1,
     0xD0,
     0x0,
     ((unsigned char)(1000 * 12.0) / 63.15),
     0xC5,
     0x8B,
     0xFF,
     0x00,
     P12V_VOUT_UNR_THRESHOLD,
     P12V_VOUT_UCR_THRESHOLD,
     P12V_VOUT_UNC_THRESHOLD,
     P12V_VOUT_LNR_THRESHOLD,
     P12V_VOUT_LCR_THRESHOLD,
     P12V_VOUT_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_PEB,
     0xC8,
     "P12V_PSU2"},

     
    {BMC_SLAVE_ADDR,
     0x00,
     PEB_SENSOR_NUM_BASE + 2,
     0x07,
     0x0d,
     0x7F,
     0x68,
     SENSOR_TYPE_VOLTAGE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_WATTS,
     0x00,
     0x00,
     (unsigned char)17.19,
     M_TOLERANCE,
     0x00,
     0x0,
     0x1,
     0xD0,
     0x0,
     ((unsigned char)(1000 * 3.3) / 17.19),
     0xC5,
     0x8B,
     0xFF,
     0x00,
     P3V3_VOUT_UNR_THRESHOLD,
     P3V3_VOUT_UCR_THRESHOLD,
     P3V3_VOUT_UNC_THRESHOLD,
     P3V3_VOUT_LNR_THRESHOLD,
     P3V3_VOUT_LCR_THRESHOLD,
     P3V3_VOUT_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_PEB,
     0xC4,
     "P3V3"},
    {BMC_SLAVE_ADDR,
     0x00,
     PEB_SENSOR_NUM_BASE + 3,
     0x07,
     0x0d,
     0x7F,
     0x68,
     SENSOR_TYPE_VOLTAGE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_WATTS,
     0x00,
     0x00,
     (unsigned char)2/5.32,
     M_TOLERANCE,
     0x00,
     0x0,
     0x1,
     0xD0,
     0x0,
     ((unsigned char)(1000 * 5) / 17.19),
     0xC5,
     0x8B,
     0xFF,
     0x00,
     P3V3_VOUT_UNR_THRESHOLD,
     P3V3_VOUT_UCR_THRESHOLD,
     P3V3_VOUT_UNC_THRESHOLD,
     P3V3_VOUT_LNR_THRESHOLD,
     P3V3_VOUT_LCR_THRESHOLD,
     P3V3_VOUT_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_PEB,
     0xC4,
     "P5V"},
    {BMC_SLAVE_ADDR,
     0x00,
     PEB_SENSOR_NUM_BASE + 4,
     0x07,
     0x0d,
     0x7F,
     0x68,
     SENSOR_TYPE_VOLTAGE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_WATTS,
     0x00,
     0x00,
     (unsigned char)7.06,
     M_TOLERANCE,
     0x00,
     0x0,
     0x1,
     0xD0,
     0x0,
     ((unsigned char)(1000 * 1.0) / 7.06),
     0xC5,
     0x8B,
     0xFF,
     0x00,
     PVNN_VOUT_UNR_THRESHOLD,
     PVNN_VOUT_UCR_THRESHOLD,
     PVNN_VOUT_UNC_THRESHOLD,
     PVNN_VOUT_LNR_THRESHOLD,
     PVNN_VOUT_LCR_THRESHOLD,
     PVNN_VOUT_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_PEB,
     0xC8,
     "PVNN_PCH"},
    {BMC_SLAVE_ADDR,
     0x00,
     PEB_SENSOR_NUM_BASE + 5,
     0x07,
     0x0d,
     0x7F,
     0x68,
     SENSOR_TYPE_VOLTAGE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_WATTS,
     0x00,
     0x00,
     (unsigned char)7.06,
     M_TOLERANCE,
     0x00,
     0x0,
     0x1,
     0xD0,
     0x0,
     ((unsigned char)(1000 * 1.05) / 7.06),
     0xC5,
     0x8B,
     0xFF,
     0x00,
     PVNN_VOUT_UNR_THRESHOLD,
     PVNN_VOUT_UCR_THRESHOLD,
     PVNN_VOUT_UNC_THRESHOLD,
     PVNN_VOUT_LNR_THRESHOLD,
     PVNN_VOUT_LCR_THRESHOLD,
     PVNN_VOUT_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_PEB,
     0xC9,
     "P1V05_PCH"},
    {BMC_SLAVE_ADDR,
     0x00,
     PEB_SENSOR_NUM_BASE + 6,
     0x07,
     0x0d,
     0x7F,
     0x68,
     SENSOR_TYPE_VOLTAGE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_WATTS,
     0x00,
     0x00,
     (unsigned char)9.41,
     M_TOLERANCE,
     0x00,
     0x0,
     0x1,
     0xD0,
     0x0,
     ((unsigned char)(1000 * 1.8) / 9.41),
     0xC5,
     0x8B,
     0xFF,
     0x00,
     P1V8_VOUT_UNR_THRESHOLD,
     P1V8_VOUT_UCR_THRESHOLD,
     P1V8_VOUT_UNC_THRESHOLD,
     P1V8_VOUT_LNR_THRESHOLD,
     P1V8_VOUT_LCR_THRESHOLD,
     P1V8_VOUT_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_PEB,
     0xC8,
     "P1V8"},
    {BMC_SLAVE_ADDR,
     0x00,
     PEB_SENSOR_NUM_BASE + 7,
     0x07,
     0x0d,
     0x7F,
     0x68,
     SENSOR_TYPE_VOLTAGE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_WATTS,
     0x00,
     0x00,
     (unsigned char)20.22,
     M_TOLERANCE,
     0x00,
     0x0,
     0x1,
     0xD0,
     0x0,
     ((unsigned char)(1000 * 3.0) / 20.22),
     0xC5,
     0x8B,
     0xFF,
     0x00,
     P3V_VOUT_UNR_THRESHOLD,
     P3V_VOUT_UCR_THRESHOLD,
     P3V_VOUT_UNC_THRESHOLD,
     P3V_VOUT_LNR_THRESHOLD,
     P3V_VOUT_LCR_THRESHOLD,
     P3V_VOUT_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_PEB,
     0xC7,
     "BAT"},
    {BMC_SLAVE_ADDR,
     0x00,
     PEB_SENSOR_NUM_BASE + 8,
     0x07,
     0x0d,
     0x7F,
     0x68,
     SENSOR_TYPE_VOLTAGE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_WATTS,
     0x00,
     0x00,
     (unsigned char)1.8,
     M_TOLERANCE,
     0x00,
     0x0,
     0x1,
     0xD0,
     0x0,
     ((unsigned char)(1000 * 0.8) / 1.8),
     0xC5,
     0x8B,
     0xFF,
     0x00,
     PVCCIN_VOUT_UNR_THRESHOLD,
     PVCCIN_VOUT_UCR_THRESHOLD,
     PVCCIN_VOUT_UNC_THRESHOLD,
     PVCCIN_VOUT_LNR_THRESHOLD,
     PVCCIN_VOUT_LCR_THRESHOLD,
     PVCCIN_VOUT_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_PEB,
     0xCB,
     "PVCCIN_IN"},
    {BMC_SLAVE_ADDR,
     0x00,
     PEB_SENSOR_NUM_BASE + 9,
     0x07,
     0x0d,
     0x7F,
     0x68,
     SENSOR_TYPE_VOLTAGE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_WATTS,
     0x00,
     0x00,
     (unsigned char)9.40,
     M_TOLERANCE,
     0x00,
     0x0,
     0x1,
     0xD0,
     0x0,
     ((unsigned char)(1000 * 0.8) / 9.40),
     0xC5,
     0x8B,
     0xFF,
     0x00,
     PVCCIN_VOUT_UNR_THRESHOLD,
     PVCCIN_VOUT_UCR_THRESHOLD,
     PVCCIN_VOUT_UNC_THRESHOLD,
     PVCCIN_VOUT_LNR_THRESHOLD,
     PVCCIN_VOUT_LCR_THRESHOLD,
     PVCCIN_VOUT_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_PEB,
     0xCB,
     "PVNN_PCH_CPU0"},
    {BMC_SLAVE_ADDR,
     0x00,
     PEB_SENSOR_NUM_BASE + 10,
     0x07,
     0x0d,
     0x7F,
     0x68,
     SENSOR_TYPE_VOLTAGE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_WATTS,
     0x00,
     0x00,
     (unsigned char)1,
     M_TOLERANCE,
     0x00,
     0x0,
     0x1,
     0xD0,
     0x0,
     ((unsigned char)(1000 * 1.8) / 9.40),
     0xC5,
     0x8B,
     0xFF,
     0x00,
     PVCCIN_VOUT_UNR_THRESHOLD,
     PVCCIN_VOUT_UCR_THRESHOLD,
     PVCCIN_VOUT_UNC_THRESHOLD,
     PVCCIN_VOUT_LNR_THRESHOLD,
     PVCCIN_VOUT_LCR_THRESHOLD,
     PVCCIN_VOUT_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_PEB,
     0xCB,
     "P1V8_NACDELAY"},
    {BMC_SLAVE_ADDR,
     0x00,
     PEB_SENSOR_NUM_BASE + 11,
     0x07,
     0x0d,
     0x7F,
     0x68,
     SENSOR_TYPE_VOLTAGE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_WATTS,
     0x00,
     0x00,
     (unsigned char)7.06,
     M_TOLERANCE,
     0x00,
     0x0,
     0x1,
     0xD0,
     0x0,
     ((unsigned char)(1000 * 1.2) / 7.06),
     0xC5,
     0x8B,
     0xFF,
     0x00,
     PVDDQ_VOUT_UNR_THRESHOLD,
     PVDDQ_VOUT_UCR_THRESHOLD,
     PVDDQ_VOUT_UNC_THRESHOLD,
     PVDDQ_VOUT_LNR_THRESHOLD,
     PVDDQ_VOUT_LCR_THRESHOLD,
     PVDDQ_VOUT_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_PEB,
     0xCE,
     "P1V2_VDDQ"},
    {BMC_SLAVE_ADDR,
     0x00,
     PEB_SENSOR_NUM_BASE + 12,
     0x07,
     0x0d,
     0x7F,
     0x68,
     SENSOR_TYPE_VOLTAGE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_WATTS,
     0x00,
     0x00,
     (unsigned char)9.40,
     M_TOLERANCE,
     0x00,
     0x0,
     0x1,
     0xD0,
     0x0,
     ((unsigned char)(1000 * 0.8) / 9.40),
     0xC5,
     0x8B,
     0xFF,
     0x00,
     PVCCIN_VOUT_UNR_THRESHOLD,
     PVCCIN_VOUT_UCR_THRESHOLD,
     PVCCIN_VOUT_UNC_THRESHOLD,
     PVCCIN_VOUT_LNR_THRESHOLD,
     PVCCIN_VOUT_LCR_THRESHOLD,
     PVCCIN_VOUT_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_PEB,
     0xCB,
     "PVNN_NAC"},
    {BMC_SLAVE_ADDR,
     0x00,
     PEB_SENSOR_NUM_BASE + 13,
     0x07,
     0x0d,
     0x7F,
     0x68,
     SENSOR_TYPE_VOLTAGE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_WATTS,
     0x00,
     0x00,
     (unsigned char)7.06,
     M_TOLERANCE,
     0x00,
     0x0,
     0x1,
     0xD0,
     0x0,
     ((unsigned char)(1000 * 1.05) / 7.06),
     0xC5,
     0x8B,
     0xFF,
     0x00,
     PVNN_VOUT_UNR_THRESHOLD,
     PVNN_VOUT_UCR_THRESHOLD,
     PVNN_VOUT_UNC_THRESHOLD,
     PVNN_VOUT_LNR_THRESHOLD,
     PVNN_VOUT_LCR_THRESHOLD,
     PVNN_VOUT_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_PEB,
     0xC9,
     "P1V05_NAC"},
    {BMC_SLAVE_ADDR,
     0x00,
     PEB_SENSOR_NUM_BASE + 14,
     0x07,
     0x0d,
     0x7F,
     0x68,
     SENSOR_TYPE_VOLTAGE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_WATTS,
     0x00,
     0x00,
     (unsigned char)7.06,
     M_TOLERANCE,
     0x00,
     0x0,
     0x1,
     0xD0,
     0x0,
     ((unsigned char)(1000 * 2.5) / 7.06),
     0xC5,
     0x8B,
     0xFF,
     0x00,
     PVDDQ_VOUT_UNR_THRESHOLD,
     PVDDQ_VOUT_UCR_THRESHOLD,
     PVDDQ_VOUT_UNC_THRESHOLD,
     PVDDQ_VOUT_LNR_THRESHOLD,
     PVDDQ_VOUT_LCR_THRESHOLD,
     PVDDQ_VOUT_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_PEB,
     0xCE,
     "PVPP"},
    {BMC_SLAVE_ADDR,
     0x00,
     PEB_SENSOR_NUM_BASE + 15,
     0x07,
     0x0d,
     0x7F,
     0x68,
     SENSOR_TYPE_VOLTAGE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_WATTS,
     0x00,
     0x00,
     (unsigned char)3.53,
     M_TOLERANCE,
     0x00,
     0x0,
     0x1,
     0xD0,
     0x0,
     ((unsigned char)(1000 * 0.6) / 3.53),
     0xC5,
     0x8B,
     0xFF,
     0x00,
     PVDDQ_VOUT_UNR_THRESHOLD,
     PVDDQ_VOUT_UCR_THRESHOLD,
     PVDDQ_VOUT_UNC_THRESHOLD,
     PVDDQ_VOUT_LNR_THRESHOLD,
     PVDDQ_VOUT_LCR_THRESHOLD,
     PVDDQ_VOUT_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_PEB,
     0xCE,
     "PVTT"},

};

sensor_thresh_t nva_sensors[NVA_SENSOR_COUNT] = {
    // {BMC_SLAVE_ADDR, 0x00, NVA_SENSOR_PSU1_TEMP, 0xA, 0x0, 0x7F, 0x64,
    // SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x01, 0x00, 0x00, 0x1, 0xE0,
    // 0x1,
    // 0x4, 0xFF, 0x0, 0xFF, 0x0,
    // PSU_TEMP_UNR_THRESHOLD, PSU_TEMP_UCR_THRESHOLD, PSU_TEMP_UNC_THRESHOLD,
    // PSU_TEMP_LNR_THRESHOLD, PSU_TEMP_LCR_THRESHOLD, PSU_TEMP_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_NVA, 0xC9, "PSU1_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, NVA_SENSOR_PSU1_WATT, 0xA, 0x0, 0x7F, 0x64,
    // SENSOR_TYPE_POWER_UNIT, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_WATTS, 0x00, 0x00, 10, 0x01, 0x00, 0x02, 0x30, 0x01,
    // 0x1,
    // 0x4, 0xFF, 0x0, 0xFF, 0x0,
    // PSU_WATT_UNR_THRESHOLD, PSU_WATT_UCR_THRESHOLD, PSU_WATT_UNC_THRESHOLD,
    // PSU_WATT_LNR_THRESHOLD, PSU_WATT_LCR_THRESHOLD, PSU_WATT_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_NVA, 0xCE, "PSU1_OUT_POWER"},
    // {BMC_SLAVE_ADDR, 0x00, NVA_SENSOR_PSU1_FAN1, 0x1D, 0x0, 0x7F, 0x64,
    // SENSOR_TYPE_FAN, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_RPM, 0x00, 0x00, 100, 0x01, 0x00, 0x02, 0x30, 0x00,
    // 0x1,
    // 0x4, 0xFF, 0x0, 0xFF, 0x0,
    // NVA_FAN_UNR_THRESHOLD, NVA_FAN_UCR_THRESHOLD, NVA_FAN_UNC_THRESHOLD,
    // NVA_FAN_LNR_THRESHOLD, NVA_FAN_LCR_THRESHOLD, NVA_FAN_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_NVA, 0xC8, "PSU1_FAN"},
    // {BMC_SLAVE_ADDR, 0x00, NVA_SENSOR_PSU2_TEMP, 0xA, 0x0, 0x7F, 0x64,
    // SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x01, 0x00, 0x00, 0x1, 0xE0,
    // 0x1,
    // 0x4, 0xFF, 0x0, 0xFF, 0x0,
    // PSU_TEMP_UNR_THRESHOLD, PSU_TEMP_UCR_THRESHOLD, PSU_TEMP_UNC_THRESHOLD,
    // PSU_TEMP_LNR_THRESHOLD, PSU_TEMP_LCR_THRESHOLD, PSU_TEMP_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_NVA, 0xC9, "PSU2_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, NVA_SENSOR_PSU2_WATT, 0xA, 0x0, 0x7F, 0x64,
    // SENSOR_TYPE_POWER_UNIT, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_WATTS, 0x00, 0x00, 10, 0x01, 0x00, 0x02, 0x30, 0x01,
    // 0x1,
    // 0x4, 0xFF, 0x0, 0xFF, 0x0,
    // PSU_WATT_UNR_THRESHOLD, PSU_WATT_UCR_THRESHOLD, PSU_WATT_UNC_THRESHOLD,
    // PSU_WATT_LNR_THRESHOLD, PSU_WATT_LCR_THRESHOLD, PSU_WATT_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_NVA, 0xCE, "PSU2_OUT_POWER"},
    // {BMC_SLAVE_ADDR, 0x00, NVA_SENSOR_PSU2_FAN1, 0x1D, 0x0, 0x7F, 0x64,
    // SENSOR_TYPE_FAN, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_RPM, 0x00, 0x00, 100, 0x01, 0x00, 0x02, 0x30, 0x00,
    // 0x1,
    // 0x4, 0xFF, 0x0, 0xFF, 0x0,
    // NVA_FAN_UNR_THRESHOLD, NVA_FAN_UCR_THRESHOLD, NVA_FAN_UNC_THRESHOLD,
    // NVA_FAN_LNR_THRESHOLD, NVA_FAN_LCR_THRESHOLD, NVA_FAN_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_NVA, 0xC8, "PSU2_FAN"},
    {BMC_SLAVE_ADDR,
     0x00,
     NVA_SYSTEM_FAN1,
     0x1D,
     0x0,
     0x7F,
     0x64,
     SENSOR_TYPE_FAN,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_RPM,
     0x00,
     0x00,
     100,
     0x01,
     0x00,
     0x02,
     0x30,
     0x00,
     0x1,
     0x4,
     0xFF,
     0x0,
     0xFF,
     0x0,
     NVA_FAN_UNR_THRESHOLD,
     NVA_FAN_UCR_THRESHOLD,
     NVA_FAN_UNC_THRESHOLD,
     NVA_FAN_LNR_THRESHOLD,
     NVA_FAN_LCR_THRESHOLD,
     NVA_FAN_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_NVA,
     0xCB,
     "SYSTEM_FAN1"},
    {BMC_SLAVE_ADDR,
     0x00,
     NVA_SYSTEM_FAN2,
     0x1D,
     0x0,
     0x7F,
     0x64,
     SENSOR_TYPE_FAN,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_RPM,
     0x00,
     0x00,
     100,
     0x01,
     0x00,
     0x02,
     0x30,
     0x00,
     0x1,
     0x4,
     0xFF,
     0x0,
     0xFF,
     0x0,
     NVA_FAN_UNR_THRESHOLD,
     NVA_FAN_UCR_THRESHOLD,
     NVA_FAN_UNC_THRESHOLD,
     NVA_FAN_LNR_THRESHOLD,
     NVA_FAN_LCR_THRESHOLD,
     NVA_FAN_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_NVA,
     0xCB,
     "SYSTEM_FAN2"},
    {BMC_SLAVE_ADDR,
     0x00,
     NVA_SYSTEM_FAN3,
     0x1D,
     0x0,
     0x7F,
     0x64,
     SENSOR_TYPE_FAN,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_RPM,
     0x00,
     0x00,
     100,
     0x01,
     0x00,
     0x02,
     0x30,
     0x00,
     0x1,
     0x4,
     0xFF,
     0x0,
     0xFF,
     0x0,
     NVA_FAN_UNR_THRESHOLD,
     NVA_FAN_UCR_THRESHOLD,
     NVA_FAN_UNC_THRESHOLD,
     NVA_FAN_LNR_THRESHOLD,
     NVA_FAN_LCR_THRESHOLD,
     NVA_FAN_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_NVA,
     0xCB,
     "SYSTEM_FAN3"},
    {BMC_SLAVE_ADDR,
     0x00,
     NVA_SYSTEM_FAN4,
     0x1D,
     0x0,
     0x7F,
     0x64,
     SENSOR_TYPE_FAN,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_RPM,
     0x00,
     0x00,
     100,
     0x01,
     0x00,
     0x02,
     0x30,
     0x00,
     0x1,
     0x4,
     0xFF,
     0x0,
     0xFF,
     0x0,
     NVA_FAN_UNR_THRESHOLD,
     NVA_FAN_UCR_THRESHOLD,
     NVA_FAN_UNC_THRESHOLD,
     NVA_FAN_LNR_THRESHOLD,
     NVA_FAN_LCR_THRESHOLD,
     NVA_FAN_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_NVA,
     0xCB,
     "SYSTEM_FAN4"},
    {BMC_SLAVE_ADDR,
     0x00,
     NVA_SYSTEM_FAN5,
     0x1D,
     0x0,
     0x7F,
     0x64,
     SENSOR_TYPE_FAN,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_RPM,
     0x00,
     0x00,
     100,
     0x01,
     0x00,
     0x02,
     0x30,
     0x00,
     0x1,
     0x4,
     0xFF,
     0x0,
     0xFF,
     0x0,
     NVA_FAN_UNR_THRESHOLD,
     NVA_FAN_UCR_THRESHOLD,
     NVA_FAN_UNC_THRESHOLD,
     NVA_FAN_LNR_THRESHOLD,
     NVA_FAN_LCR_THRESHOLD,
     NVA_FAN_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_NVA,
     0xCB,
     "SYSTEM_FAN5"},
};

sensor_thresh_t pdpb_sensors[PDPB_SENSOR_COUNT] = {
    {BMC_SLAVE_ADDR,
     0x00,
     PDPB_SENSOR_TEMP_CPU0,
     0x0A,
     0x00,
     0x7F,
     0x64,
     SENSOR_TYPE_TEMPERATURE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_CELSIUS,
     0x00,
     0x00,
     100,
     0x00,
     0x00,
     0x0,
     0x01,
     0xE0,
     0x01,
     100,
     0xFF,
     0x00,
     0xFF,
     0x00,
     PDPB_CPU_UNR_THRESHOLD,
     PDPB_CPU_UCR_THRESHOLD,
     PDPB_CPU_UNC_THRESHOLD,
     PDPB_CPU_LNR_THRESHOLD,
     PDPB_CPU_LCR_THRESHOLD,
     PDPB_CPU_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_PDPB,
     0xCF,
     "CPU0_TEMP"},
    {BMC_SLAVE_ADDR,
     0x00,
     PDPB_SENSOR_TEMP_CPU1,
     0x0A,
     0x00,
     0x7F,
     0x64,
     SENSOR_TYPE_TEMPERATURE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_CELSIUS,
     0x00,
     0x00,
     100,
     0x00,
     0x00,
     0x0,
     0x01,
     0xE0,
     0x01,
     100,
     0xFF,
     0x00,
     0xFF,
     0x00,
     PDPB_CPU_UNR_THRESHOLD,
     PDPB_CPU_UCR_THRESHOLD,
     PDPB_CPU_UNC_THRESHOLD,
     PDPB_CPU_LNR_THRESHOLD,
     PDPB_CPU_LCR_THRESHOLD,
     PDPB_CPU_LNC_THRESHOLD,
     0x00,
     0x00,
     FRU_PDPB,
     0xCF,
     "CPU1_TEMP"},
    {BMC_SLAVE_ADDR,
     0x00,
     PDPB_SENSOR0_TEMP_LM75,
     0x0A,
     0x00,
     0x7F,
     0x64,
     SENSOR_TYPE_TEMPERATURE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_CELSIUS,
     0x00,
     0x00,
     100,
     0x00,
     0x00,
     0x0,
     0x01,
     0xE0,
     0x01,
     100,
     0xFF,
     0x00,
     0xFF,
     0x00,
     LM75_TEMP_UNR_THRESHOLD,
     LM75_TEMP_UCR_THRESHOLD,
     LM75_TEMP_UNC_THRESHOLD,
     LM75_TEMP_LNC_THRESHOLD,
     LM75_TEMP_LCR_THRESHOLD,
     LM75_TEMP_LNR_THRESHOLD,
     0x00,
     0x00,
     FRU_PDPB,
     0xCF,
     "LM75_TEMP0"},
    {BMC_SLAVE_ADDR,
     0x00,
     PDPB_SENSOR1_TEMP_LM75,
     0x0A,
     0x00,
     0x7F,
     0x64,
     SENSOR_TYPE_TEMPERATURE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_CELSIUS,
     0x00,
     0x00,
     100,
     0x00,
     0x00,
     0x0,
     0x01,
     0xE0,
     0x01,
     100,
     0xFF,
     0x00,
     0xFF,
     0x00,
     LM75_TEMP_UNR_THRESHOLD,
     LM75_TEMP_UCR_THRESHOLD,
     LM75_TEMP_UNC_THRESHOLD,
     LM75_TEMP_LNC_THRESHOLD,
     LM75_TEMP_LCR_THRESHOLD,
     LM75_TEMP_LNR_THRESHOLD,
     0x00,
     0x00,
     FRU_PDPB,
     0xCF,
     "LM75_TEMP1"},
    {BMC_SLAVE_ADDR,
     0x00,
     PDPB_SENSOR2_TEMP_LM75,
     0x0A,
     0x00,
     0x7F,
     0x64,
     SENSOR_TYPE_TEMPERATURE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_CELSIUS,
     0x00,
     0x00,
     100,
     0x00,
     0x00,
     0x0,
     0x01,
     0xE0,
     0x01,
     100,
     0xFF,
     0x00,
     0xFF,
     0x00,
     LM75_TEMP_UNR_THRESHOLD,
     LM75_TEMP_UCR_THRESHOLD,
     LM75_TEMP_UNC_THRESHOLD,
     LM75_TEMP_LNC_THRESHOLD,
     LM75_TEMP_LCR_THRESHOLD,
     LM75_TEMP_LNR_THRESHOLD,
     0x00,
     0x00,
     FRU_PDPB,
     0xCF,
     "LM75_TEMP2"},
    {BMC_SLAVE_ADDR,
     0x00,
     PDPB_SENSOR3_TEMP_LM75,
     0x0A,
     0x00,
     0x7F,
     0x64,
     SENSOR_TYPE_TEMPERATURE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_CELSIUS,
     0x00,
     0x00,
     100,
     0x00,
     0x00,
     0x0,
     0x01,
     0xE0,
     0x01,
     100,
     0xFF,
     0x00,
     0xFF,
     0x00,
     LM75_TEMP_UNR_THRESHOLD,
     LM75_TEMP_UCR_THRESHOLD,
     LM75_TEMP_UNC_THRESHOLD,
     LM75_TEMP_LNC_THRESHOLD,
     LM75_TEMP_LCR_THRESHOLD,
     LM75_TEMP_LNR_THRESHOLD,
     0x00,
     0x00,
     FRU_PDPB,
     0xCF,
     "LM75_TEMP3"},
    {BMC_SLAVE_ADDR,
     0x00,
     PDPB_SENSOR4_TEMP_LM75,
     0x0A,
     0x00,
     0x7F,
     0x64,
     SENSOR_TYPE_TEMPERATURE,
     SENSOR_EVENT_READING_THRESHOLD,
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
     {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
     0x00,
     SENSOR_UNIT_CELSIUS,
     0x00,
     0x00,
     100,
     0x00,
     0x00,
     0x0,
     0x01,
     0xE0,
     0x01,
     100,
     0xFF,
     0x00,
     0xFF,
     0x00,
     LM75_TEMP_UNR_THRESHOLD,
     LM75_TEMP_UCR_THRESHOLD,
     LM75_TEMP_UNC_THRESHOLD,
     LM75_TEMP_LNC_THRESHOLD,
     LM75_TEMP_LCR_THRESHOLD,
     LM75_TEMP_LNR_THRESHOLD,
     0x00,
     0x00,
     FRU_PDPB,
     0xCF,
     "LM75_TEMP4"},

    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU0_CH0_DIMM0, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU0_DIMM1_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU0_CH0_DIMM1, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU0_DIMM2_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU0_CH0_DIMM2, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "FRONT_LEFT_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU0_CH1_DIMM0, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU0_DIMM4_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU0_CH1_DIMM1, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU0_DIMM5_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU0_CH1_DIMM2, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU0_DIMM6_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU0_CH2_DIMM0, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU0_DIMM7_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU0_CH2_DIMM1, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU0_DIMM8_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU0_CH2_DIMM2, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU0_DIMM9_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU0_CH3_DIMM0, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU0_DIMM10_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU0_CH3_DIMM1, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU0_DIMM11_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU0_CH3_DIMM2, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU0_DIMM12_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU1_CH0_DIMM0, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU1_DIMM1_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU1_CH0_DIMM1, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU1_DIMM2_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU1_CH0_DIMM2, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU1_DIMM3_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU1_CH1_DIMM0, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU1_DIMM4_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU1_CH1_DIMM1, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU1_DIMM5_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU1_CH1_DIMM2, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU1_DIMM6_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU1_CH2_DIMM0, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU1_DIMM7_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU1_CH2_DIMM1, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU1_DIMM8_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU1_CH2_DIMM2, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU1_DIMM9_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU1_CH3_DIMM0, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU1_DIMM10_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU1_CH3_DIMM1, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU1_DIMM11_TEMP"},
    // {BMC_SLAVE_ADDR, 0x00, PDPB_SENSOR_TEMP_CPU1_CH3_DIMM2, 0x0A, 0x00, 0x7F,
    // 0x64, SENSOR_TYPE_TEMPERATURE, SENSOR_EVENT_READING_THRESHOLD,
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_EVENT_ASSERTION_LS, SENSOR_EVENT_ASSERTION_MS},
    // {SENSOR_MASK_READ_SETTABLE_LS, SENSOR_MASK_READ_SETTABLE_MS},
    // 0x00, SENSOR_UNIT_CELSIUS, 0x00, 0x00, 100, 0x00, 0x00, 0x0, 0x01, 0xE0,
    // 0x01,
    // 100, 0xFF, 0x00, 0xFF, 0x00,
    // PDPB_MB_UNR_THRESHOLD, PDPB_MB_UCR_THRESHOLD, PDPB_MB_UNC_THRESHOLD,
    // PDPB_MB_LNR_THRESHOLD, PDPB_MB_LCR_THRESHOLD, PDPB_MB_LNC_THRESHOLD,
    // 0x00, 0x00, FRU_PDPB, 0xCF, "CPU1_DIMM12_TEMP"}
};